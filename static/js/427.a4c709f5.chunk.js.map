{"version":3,"file":"static/js/427.a4c709f5.chunk.js","mappings":"0HAEMA,E,QAAuBC,GAAAA,KAAWC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oyBA+BxC,K,wDCXA,IAnBA,WACI,OACIC,EAAAA,EAAAA,MAACC,EAAAA,GAAc,CACXC,SAAS,YACTC,UAAW,IACXC,aAAW,EACXC,cAAY,EACZC,KAAK,EACLC,kBAAgB,EAChBC,WAAS,EACTC,cAAY,EACZC,MAAM,UACNC,WAAYC,EAAAA,GAAMC,SAAA,EAElBC,EAAAA,EAAAA,KAAA,KAAAD,SAAG,SAAQ,4BAGvB,C,sECHA,E,QAfsBhB,GAAAA,QAAcC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,yP,SCSpC,EARgB,SAAHgB,GAAsB,IAAhBF,EAAQE,EAARF,SACf,OAAOC,EAAAA,EAAAA,KAACE,EAAa,CAAAH,SAAEA,GAC3B,C,qLCQe,SAASI,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,KAE1BC,EAAAA,EAAAA,YAAU,WACAH,IACFI,EAAAA,GAAAA,UACAA,EAAAA,GAAAA,MAAYJ,GAEpB,GAAG,CAACA,IAUJ,OACIN,EAAAA,EAAAA,KAACW,EAAAA,EAAO,CAAAZ,UACJb,EAAAA,EAAAA,MAAC0B,EAAAA,EAAS,CAAAb,SAAA,EACNC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,WACJb,EAAAA,EAAAA,MAACJ,EAAAA,EAAoB,CAAC+B,SAZb,SAAAC,GACjBA,EAAEC,iBACF,IAAMC,EAAQF,EAAEG,OAAOC,SAASF,MAAMG,MAChCC,EAAWN,EAAEG,OAAOC,SAASE,SAASD,MAE5Cf,GAASiB,EAAAA,EAAAA,IAAe,CAAEL,MAAAA,EAAOI,SAAAA,KACjCN,EAAEQ,cAAcC,OACpB,EAKyDxB,SAAA,EACzCC,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,QAAOzB,SAAC,WACvBC,EAAAA,EAAAA,KAAA,SAAOyB,KAAK,QAAQC,KAAK,QAAQC,MAAM,QAAQC,UAAQ,KAEvD5B,EAAAA,EAAAA,KAAA,SAAOwB,QAAQ,WAAUzB,SAAC,cAC1BC,EAAAA,EAAAA,KAAA,SACIyB,KAAK,WACLC,KAAK,WACLC,MAAM,WACNC,UAAQ,KAGZ5B,EAAAA,EAAAA,KAAC6B,EAAAA,EAAM,CAACC,UAAU,WAAWL,KAAK,SAAQ1B,SAAC,gBAI/CC,EAAAA,EAAAA,KAAC+B,EAAAA,EAAY,QAI7B,C","sources":["components/Forms/FormAddContact.styled.js","components/Notification/Notification.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","pages/Login/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledFormAddContact = styled.form`\n    display: flex;\n    flex-direction: column;\n    label {\n        margin-bottom: 5px;\n    }\n    input {\n        display: block;\n        width: 100%;\n        margin-bottom: 15px;\n        padding: 0.375rem 0.75rem;\n        font-size: 1rem;\n        font-weight: 400;\n        line-height: 1.5;\n        color: #212529;\n        background-color: #fff;\n        background-clip: padding-box;\n        border: 1px solid #ced4da;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        border-radius: 0.25rem;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    }\n    input:focus {\n        border-color: #86b7fe;\n        outline: 0;\n        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n    }\n`;\n\nexport default StyledFormAddContact;\n","import { Slide, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification() {\n    return (\n        <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            newestOnTop\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"colored\"\n            transition={Slide}\n        >\n            <b>User</b> is already in contacts\n        </ToastContainer>\n    );\n}\n\nexport default Notification;\n","import styled from 'styled-components';\n\nconst StyledSection = styled.section`\n    padding-bottom: 30px;\n\n    &:first-child {\n        padding-top: 20px;\n    }\n\n    @media screen and (min-width: 768px) {\n        padding-bottom: 40px;\n\n        &:first-child {\n            padding-top: 32px;\n        }\n    }\n`;\nexport default StyledSection;\n","import PropTypes from 'prop-types';\nimport StyledSection from 'components/Section/Section.styled';\n\nconst Section = ({ children }) => {\n    return <StyledSection>{children}</StyledSection>;\n};\n\nSection.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport Button from 'components/Button/Button';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport StyledFormAddContact from 'components/Forms/FormAddContact.styled';\n\nimport { loginUserThunk } from 'redux/operations';\nimport { selectUserError } from 'redux/selectors';\nimport Notification from 'components/Notification/Notification';\nimport { toast } from 'react-toastify';\n\nexport default function Login() {\n    const dispatch = useDispatch();\n    const error = useSelector(selectUserError);\n\n    useEffect(() => {\n        if (!!error) {\n            toast.dismiss();\n            toast.error(error);\n        }\n    }, [error]);\n\n    const onFormSubmit = e => {\n        e.preventDefault();\n        const email = e.target.elements.email.value;\n        const password = e.target.elements.password.value;\n\n        dispatch(loginUserThunk({ email, password }));\n        e.currentTarget.reset();\n    };\n    return (\n        <Section>\n            <Container>\n                <h2>Login</h2>\n                <StyledFormAddContact onSubmit={onFormSubmit}>\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" title=\"Email\" required />\n\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        name=\"password\"\n                        title=\"Password\"\n                        required\n                    />\n\n                    <Button className=\"btnGreen\" type=\"submit\">\n                        Sign in\n                    </Button>\n                </StyledFormAddContact>\n                <Notification />\n            </Container>\n        </Section>\n    );\n}\n"],"names":["StyledFormAddContact","styled","_templateObject","_taggedTemplateLiteral","_jsxs","ToastContainer","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transition","Slide","children","_jsx","_ref","StyledSection","Login","dispatch","useDispatch","error","useSelector","selectUserError","useEffect","toast","Section","Container","onSubmit","e","preventDefault","email","target","elements","value","password","loginUserThunk","currentTarget","reset","htmlFor","type","name","title","required","Button","className","Notification"],"sourceRoot":""}