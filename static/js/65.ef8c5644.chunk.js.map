{"version":3,"file":"static/js/65.ef8c5644.chunk.js","mappings":"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","sources":["components/Forms/FormAddContact.styled.js","components/Notification/Notification.jsx","components/Section/Section.styled.js","components/Section/Section.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/HeadTilte/HeadTilte.styled.js","components/HeadTilte/HeadTilte.jsx","components/Contacts/Contact.styled.js","components/Contacts/Contact.jsx","components/Contacts/ContactList.styled.js","components/Contacts/ContactList.jsx","components/Forms/FormAddContact.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nconst StyledFormAddContact = styled.form`\n    display: flex;\n    flex-direction: column;\n    label {\n        margin-bottom: 5px;\n    }\n    input {\n        display: block;\n        width: 100%;\n        margin-bottom: 15px;\n        padding: 0.375rem 0.75rem;\n        font-size: 1rem;\n        font-weight: 400;\n        line-height: 1.5;\n        color: #212529;\n        background-color: #fff;\n        background-clip: padding-box;\n        border: 1px solid #ced4da;\n        -webkit-appearance: none;\n        -moz-appearance: none;\n        appearance: none;\n        border-radius: 0.25rem;\n        transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n    }\n    input:focus {\n        border-color: #86b7fe;\n        outline: 0;\n        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n    }\n`;\n\nexport default StyledFormAddContact;\n","import { Slide, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nfunction Notification() {\n    return (\n        <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            newestOnTop\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            draggable\n            pauseOnHover\n            theme=\"colored\"\n            transition={Slide}\n        >\n            <b>User</b> is already in contacts\n        </ToastContainer>\n    );\n}\n\nexport default Notification;\n","import styled from 'styled-components';\n\nconst StyledSection = styled.section`\n    padding-bottom: 30px;\n\n    &:first-child {\n        padding-top: 20px;\n    }\n\n    @media screen and (min-width: 768px) {\n        padding-bottom: 40px;\n\n        &:first-child {\n            padding-top: 32px;\n        }\n    }\n`;\nexport default StyledSection;\n","import PropTypes from 'prop-types';\nimport StyledSection from 'components/Section/Section.styled';\n\nconst Section = ({ children }) => {\n    return <StyledSection>{children}</StyledSection>;\n};\n\nSection.propTypes = {\n    children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from 'styled-components';\n\nconst StyledFieldInput = styled.input`\n    display: block;\n    width: 100%;\n    margin-bottom: 15px;\n    padding: 0.375rem 0.75rem;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.5;\n    color: #212529;\n    background-color: #fff;\n    background-clip: padding-box;\n    border: 1px solid #ced4da;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    border-radius: 0.25rem;\n    transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;\n\n    &:focus {\n        border-color: #86b7fe;\n        outline: 0;\n        box-shadow: 0 0 0 0.25rem rgba(13, 110, 253, 0.25);\n    }\n`;\n\nexport default StyledFieldInput;\n","import PropTypes from 'prop-types';\nimport StyledFieldInput from './Filter.styled';\n\nconst Filter = ({ filter, onFilterChange }) => {\n    const onInputChange = e => {\n        onFilterChange(e.target.value);\n    };\n\n    return (\n        <>\n            <span>Find contacts by name or phone number</span>\n            <StyledFieldInput\n                onChange={onInputChange}\n                value={filter}\n                type=\"text\"\n                name=\"search\"\n            ></StyledFieldInput>\n        </>\n    );\n};\n\nFilter.propTypes = {\n    filter: PropTypes.string.isRequired,\n    onFilterChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nconst StyledHeadTitle = styled.h2`\n    text-align: center;\n    margin: 20px 0;\n`;\n\nexport default StyledHeadTitle;\n","import PropTypes from 'prop-types';\nimport StyledHeadTitle from './HeadTilte.styled';\n\nconst HeadTilte = ({ title }) => {\n    return <StyledHeadTitle>{title}</StyledHeadTitle>;\n};\n\nHeadTilte.propTypes = {\n    title: PropTypes.string.isRequired,\n};\n\nexport default HeadTilte;\n","import styled from 'styled-components';\n\nconst StyledContact = styled.li`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding-left: 5px;\n    padding-right: 5px;\n    padding-top: 10px;\n    padding-bottom: 10px;\n\n    &:nth-of-type(odd) {\n        background-color: rgba(0, 0, 0, 0.05);\n    }\n`;\n\nexport default StyledContact;\n","import PropTypes from 'prop-types';\nimport StyledContact from './Contact.styled';\nimport Button from 'components/Button/Button';\n\nconst Contact = ({ contact, onRemoveContact }) => {\n    return (\n        <StyledContact>\n            <span>\n                <b>{contact.name}</b>: {contact.number}\n            </span>\n            <Button\n                className=\"btnRed fixed\"\n                onClick={() => onRemoveContact(contact.id)}\n            >\n                Delete\n            </Button>\n        </StyledContact>\n    );\n};\n\nContact.propTypes = {\n    contact: PropTypes.shape({\n        id: PropTypes.string.isRequired,\n        name: PropTypes.string.isRequired,\n        number: PropTypes.string.isRequired,\n    }).isRequired,\n    onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default Contact;\n","import styled from 'styled-components';\n\nconst StyledContactList = styled.ul``;\n\nexport default StyledContactList;\n","import PropTypes from 'prop-types';\nimport Contact from './Contact';\nimport StyledContactList from './ContactList.styled';\n\nconst ContactList = ({ contacts, onRemoveContact }) => {\n    let sortedContacts = [...contacts];\n    sortedContacts.sort((a, b) => a.name.localeCompare(b.name));\n\n    return (\n        <StyledContactList>\n            {sortedContacts.map(contact => (\n                <Contact\n                    contact={contact}\n                    onRemoveContact={onRemoveContact}\n                    key={contact.id}\n                />\n            ))}\n        </StyledContactList>\n    );\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.string.isRequired,\n            name: PropTypes.string.isRequired,\n            number: PropTypes.string.isRequired,\n        }).isRequired\n    ).isRequired,\n    onRemoveContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Button from 'components/Button/Button';\nimport StyledFormAddContact from './FormAddContact.styled';\n\nconst INITIAL_STATE = {\n    name: '',\n    number: '',\n};\n\nfunction FormAddContact({ onAddContact }) {\n    const [user, setUser] = useState(INITIAL_STATE);\n\n    const onInputsChange = e => {\n        setUser({ ...user, [e.target.name]: e.target.value });\n    };\n\n    const onFormSubmit = e => {\n        e.preventDefault();\n\n        onAddContact(user);\n        setUser(INITIAL_STATE);\n    };\n\n    return (\n        <StyledFormAddContact onSubmit={onFormSubmit}>\n            <label htmlFor=\"name\">Name</label>\n            <input\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n                value={user.name}\n                onChange={onInputsChange}\n                required\n            />\n\n            <label htmlFor=\"number\">Number</label>\n            <input\n                type=\"tel\"\n                name=\"number\"\n                pattern=\"\\+?\\d{1,4}?[\\-.\\s]?\\(?\\d{1,3}?\\)?[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,4}[\\-.\\s]?\\d{1,9}\"\n                title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n                value={user.number}\n                onChange={onInputsChange}\n                required\n            />\n\n            <Button className=\"btnGreen\" type=\"submit\">\n                Add contact\n            </Button>\n        </StyledFormAddContact>\n    );\n}\n\nFormAddContact.propTypes = {\n    onAddContact: PropTypes.func.isRequired,\n};\n\nexport default FormAddContact;\n","import { useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport { setFilter } from 'redux/filterSlice';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport {\n    addContactThunk,\n    deleteContactThunk,\n    getAllContactThunk,\n} from 'redux/operations';\nimport { selectContacts, selectFilter, selectUserToken } from 'redux/selectors';\n\nimport Filter from 'components/Filter/Filter';\nimport Section from 'components/Section/Section';\nimport Container from 'components/Container/Container';\nimport HeadTilte from 'components/HeadTilte/HeadTilte';\nimport ContactList from 'components/Contacts/ContactList';\nimport FormAddContact from 'components/Forms/FormAddContact';\nimport Notification from 'components/Notification/Notification';\n\nexport default function Contacts() {\n    const token = useSelector(selectUserToken);\n    const { items, error } = useSelector(selectContacts);\n    const filter = useSelector(selectFilter);\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        if (!token) return;\n\n        dispatch(getAllContactThunk());\n    }, [token, dispatch]);\n\n    useEffect(() => {\n        if (!!error) {\n            toast.dismiss();\n            toast.error(error);\n        }\n    }, [error]);\n\n    const onAddContact = contactData => {\n        const findUser = items.find(el => el.name === contactData.name.trim());\n\n        if (findUser) {\n            toast.dismiss();\n            toast.warning(\n                <>\n                    <b>{findUser.name}</b> is already in contacts!\n                </>\n            );\n            return;\n        }\n        dispatch(addContactThunk(contactData));\n    };\n\n    const onRemoveContact = contactId => {\n        dispatch(deleteContactThunk(contactId));\n    };\n\n    const onFilter = filterTerm => {\n        dispatch(setFilter(filterTerm));\n    };\n\n    const filteredContacts = () => {\n        if (!!filter) {\n            return items.filter(contact => {\n                return (\n                    contact.name\n                        .toLowerCase()\n                        .includes(filter.toLowerCase().trim()) ||\n                    contact.number.includes(filter.trim())\n                );\n            });\n        }\n        return items;\n    };\n    return (\n        <>\n            <Section>\n                <Container>\n                    <HeadTilte title=\"Phonebook\" />\n                    <FormAddContact onAddContact={onAddContact} />\n                </Container>\n            </Section>\n            {!!items.length ? (\n                <Section>\n                    <Container>\n                        <HeadTilte title=\"Contacts\" />\n                        <Filter filter={filter} onFilterChange={onFilter} />\n                        <ContactList\n                            contacts={filteredContacts()}\n                            onRemoveContact={onRemoveContact}\n                        />\n                    </Container>\n                </Section>\n            ) : (\n                <Section>\n                    <Container>\n                        <HeadTilte title=\"No contacts\" />\n                    </Container>\n                </Section>\n            )}\n            <Notification />\n        </>\n    );\n}\n"],"names":["StyledFormAddContact","styled","_templateObject","_taggedTemplateLiteral","_jsxs","ToastContainer","position","autoClose","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","theme","transition","Slide","children","_jsx","_ref","StyledSection","filter","onFilterChange","_Fragment","StyledFieldInput","onChange","e","target","value","type","name","title","StyledHeadTitle","contact","onRemoveContact","StyledContact","number","Button","className","onClick","id","contacts","sortedContacts","_toConsumableArray","sort","a","b","localeCompare","StyledContactList","map","Contact","INITIAL_STATE","onAddContact","_useState","useState","_useState2","_slicedToArray","user","setUser","onInputsChange","_objectSpread","_defineProperty","onSubmit","preventDefault","htmlFor","pattern","required","Contacts","token","useSelector","selectUserToken","_useSelector","selectContacts","items","error","selectFilter","dispatch","useDispatch","useEffect","getAllContactThunk","toast","Section","Container","HeadTilte","FormAddContact","contactData","findUser","find","el","trim","addContactThunk","length","Filter","filterTerm","setFilter","ContactList","toLowerCase","includes","contactId","deleteContactThunk","Notification"],"sourceRoot":""}